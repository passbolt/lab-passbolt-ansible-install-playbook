---
- name: Gather facts about the host
  ansible.builtin.setup:

- name: Ensure system is updated (Debian/Ubuntu)
  apt:
    update_cache: yes
    upgrade: dist
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure system is updated for RPM distribution
  dnf:
    update_cache: yes
    state: latest
  when: ansible_facts['os_family'] == "RedHat"

- name: Download passbolt-repo-setup script for PRO edition
  when: passbolt_edition == "pro"
  get_url:
    url: "{{ passbolt_repositories.pro }}"
    dest: /tmp/passbolt-repo-setup.pro.sh
    mode: '0755'

- name: Run passbolt-repo-setup script for PRO edition
  when: passbolt_edition == "pro"
  command: /tmp/passbolt-repo-setup.pro.sh

- name: Download passbolt-repo-setup script for CE edition
  when: passbolt_edition == "ce"
  get_url:
    url: "{{ passbolt_repositories.ce }}"
    dest: /tmp/passbolt-repo-setup.ce.sh
    mode: '0755'

- name: Run passbolt-repo-setup script for CE edition
  when: passbolt_edition == "ce"
  command: /tmp/passbolt-repo-setup.ce.sh

- name: Install Python MySQL library (Debian/Ubuntu)
  apt:
    name: python3-pymysql
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Install Python MySQL library for RPM distribution
  dnf:
    name: python3-PyMySQL
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Ensure MySQL is installed (Debian/Ubuntu)
  apt:
    name: mariadb-server
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure MySQL is installed for RPM distribution
  dnf:
    name: mariadb-server
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Ensure MySQL is running (Debian/Ubuntu)
  service:
    name: mysql
    state: started
    enabled: true
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure MySQL is running for RPM distribution
  service:
    name: mariadb
    state: started
    enabled: true
  when: ansible_facts['os_family'] == "RedHat"

- name: Set root password and disable unix_socket authentication (RPM)
  mysql_user:
    name: root
    host: localhost
    password: "{{ db_root_password }}"
    login_unix_socket: /var/lib/mysql/mysql.sock
    priv: "*.*:ALL,GRANT"
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Set root password and disable unix_socket authentication (Debian/Ubuntu)
  mysql_user:
    name: root
    host: localhost
    password: "{{ db_root_password }}"
    login_unix_socket: /run/mysqld/mysqld.sock
    priv: "*.*:ALL,GRANT"
    state: present
  when: ansible_facts['os_family'] == "Debian"


- name: Remove anonymous MySQL users
  mysql_user:
    name: ""
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Remove MySQL test database
  mysql_db:
    name: "test"
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Ensure remote root login is disabled
  mysql_user:
    name: "root"
    host: "{{ item }}"
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"
  with_items:
    - "%"
    - "::1"
    - "127.0.0.1"